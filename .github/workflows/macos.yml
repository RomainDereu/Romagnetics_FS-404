name: macOS Qt build (unsigned)

on:
  workflow_dispatch:
  push:
    branches: [ main ]

jobs:
  build:
    runs-on: macos-14
    env:
      APP_NAME: "Romagnetics FS-404 Companion"
      APP_SUBDIR: "03_Computer Program/src"
      BUILD_TYPE: Release
      QT_VERSION: "6.8.3"

    steps:
      - uses: actions/checkout@v4

      - name: Install Qt (+ SerialPort)
        uses: jurplel/install-qt-action@v4
        with:
          version: ${{ env.QT_VERSION }}
          target: desktop
          modules: qtserialport
          cache: true

      - name: Configure (prefer qt-cmake)
        run: |
          set -eo pipefail
          if command -v qt-cmake >/dev/null 2>&1; then
            qt-cmake -S "${{ env.APP_SUBDIR }}" -B build \
              -DCMAKE_BUILD_TYPE=$BUILD_TYPE \
              -DCMAKE_OSX_ARCHITECTURES=arm64 \
              -DCMAKE_OSX_DEPLOYMENT_TARGET=12.0
          else
            cmake -S "${{ env.APP_SUBDIR }}" -B build \
              -DCMAKE_BUILD_TYPE=$BUILD_TYPE \
              -DCMAKE_OSX_ARCHITECTURES=arm64 \
              -DCMAKE_OSX_DEPLOYMENT_TARGET=12.0
          fi

      - name: Build
        run: cmake --build build --config $BUILD_TYPE --parallel

      - name: Locate .app
        id: locate
        run: |
          set -eo pipefail
          APP_PATH=$(find build -type d -name "*.app" | head -n 1)
          [ -z "$APP_PATH" ] && echo "No .app found" && exit 1
          echo "path=$APP_PATH" >> $GITHUB_OUTPUT
          echo "Found: $APP_PATH"

      # Copy 'offscreen' platform plugin into the app bundle (non-fatal if not found)
      - name: Ensure offscreen platform plugin is present
        run: |
          set -eo pipefail
          APP_DIR="${{ steps.locate.outputs.path }}"
          DEST="$APP_DIR/Contents/PlugIns/platforms"
          mkdir -p "$DEST"
          PLUGDIR=""
          if command -v qtpaths >/dev/null 2>&1; then
            PLUGDIR="$(qtpaths --plugin-dir || true)"
          elif command -v qmake >/dev/null 2>&1; then
            PLUGDIR="$(qmake -query QT_INSTALL_PLUGINS || true)"
          fi
          PLUG=""
          [ -n "$PLUGDIR" ] && PLUG="$PLUGDIR/platforms/libqoffscreen.dylib"
          if [ ! -f "${PLUG:-/nonexistent}" ]; then
            PLUG="$(find "$RUNNER_TEMP" "$GITHUB_WORKSPACE/Qt" -maxdepth 6 -name 'libqoffscreen.dylib' 2>/dev/null | head -n1 || true)"
          fi
          if [ -n "$PLUG" ] && [ -f "$PLUG" ]; then
            cp -fv "$PLUG" "$DEST/"
            echo "Copied offscreen plugin from: $PLUG"
          else
            echo "WARNING: libqoffscreen.dylib not found; headless tests may skip."
          fi

      - name: Bundle (macdeployqt, no signing)
        run: |
          set -eo pipefail
          macdeployqt "${{ steps.locate.outputs.path }}" -verbose=3 -qmldir="${{ env.APP_SUBDIR }}" -dmg

      - name: Zip the .app
        run: |
          ditto -c -k --sequesterRsrc --keepParent \
            "${{ steps.locate.outputs.path }}" "${{ env.APP_NAME }}.zip"

      - name: Upload artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.APP_NAME }}-unsigned-macOS
          path: |
            *.dmg
            build/*.dmg
            *.zip
          if-no-files-found: warn
          retention-days: 7
