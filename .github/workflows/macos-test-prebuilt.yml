name: macOS test build artifact

on:
  workflow_run:
    workflows: ["macOS Qt build (unsigned)"]   # EXACTLY the 'name:' of your build workflow
    types: [completed]

permissions:
  actions: read
  contents: read

jobs:
  test:
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: macos-14

    steps:
      - name: Download artifacts from the triggering build run
        uses: actions/download-artifact@v4
        with:
          github-token: ${{ github.token }}
          run-id: ${{ github.event.workflow_run.id }}
          path: artifacts
          # Avoid exact name issues (spaces etc.)
          pattern: "*unsigned-macOS*"
          merge-multiple: true

      - name: List artifacts (debug)
        run: ls -R artifacts || true

      - name: Mount DMG (if present) and run headless
        run: |
          set -euo pipefail
          DMG=$(find artifacts -name "*.dmg" | head -n1 || true)
          APP=""
          if [ -n "$DMG" ]; then
            BEFORE="$(ls /Volumes || true)"
            hdiutil attach -nobrowse "$DMG" >/tmp/mount.txt
            AFTER="$(ls /Volumes || true)"
            VOL="$(comm -13 <(echo "$BEFORE"|sort) <(echo "$AFTER"|sort) | head -n1)"
            APP="$(find "/Volumes/$VOL" -maxdepth 1 -type d -name "*.app" | head -n1 || true)"
          fi
          if [ -z "$APP" ]; then
            APP=$(find artifacts -type d -name "*.app" | head -n1 || true)
          fi
          [ -z "$APP" ] && echo "No .app found" && exit 1
          BIN="$APP/Contents/MacOS/$(basename "$APP" .app)"
          export QT_QPA_PLATFORM=offscreen
          "$BIN" --help || true
          "$BIN" || true
          otool -L "$BIN" || true
          spctl --assess --type execute --verbose "$APP" || true
          [ -n "${VOL:-}" ] && hdiutil detach "/Volumes/$VOL" || true
